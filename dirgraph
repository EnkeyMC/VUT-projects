#!/bin/sh
POSIXLY_CORRECT=yes
IFS="$(printf '\n\t')"

ignore="^$"
ignore_set=false
normalize=false
FSHIST_PREFIX_LEN=12
FTHIST_PREFIX_LEN=47
LINE_LEN=79

if [ -t 1 ]; then
	LINE_LEN=$((`tput cols` - 1))
fi

while getopts "i:n" flag; do
	case $flag in
		i )
			if $ignore_set; then
				echo "Option -i was already specified" >&2
				exit 1
			else
				ignore="$OPTARG"
				ignore_set=true
			fi
			;;
		n )
			normalize=true
			;;
		* )
			exit 1
			;;
	esac
done

shift $(($OPTIND - 1))

DIR="."

if [ $1 ]; then
	if [ -d $1 ]; then
		DIR="$1"
	else
		echo "$1 is not a directory!" >&2
		exit 1
	fi
fi


echo "Root directory: $DIR"

dir_count=`find $DIR -type d 2> /dev/null | wc -l | sed -e 's/^ *//g;s/ *$//g'`

if $ignore_set; then
	dir_count=$(($dir_count - `find . -type d 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi

echo "Directories: $dir_count"

file_count=`find $DIR -type f 2> /dev/null| wc -l | sed -e 's/^ *//g;s/ *$//g'`

if $ignore_set; then
	file_count=$(($file_count - `find . -type f 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi

echo "All files: $file_count"

# FSHIST_PREFIX_LEN
echo "File size histogram:"
# This is ugly, but at least it works
# < 100B
ctg_file_count=`find $DIR -type f -size -100c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size -100c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="<100 B  :,$ctg_file_count"
# < 1 KiB
ctg_file_count=`find $DIR -type f -size +99c -size -1024c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +99c -size -1024c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<1 KiB  :,')"$ctg_file_count"
# < 10 KiB
ctg_file_count=`find $DIR -type f -size +1023c -size -10240c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +1023c -size -10240c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<10 KiB :,')"$ctg_file_count"
# < 100 KiB
ctg_file_count=`find $DIR -type f -size +10239c -size -102400c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +10239c -size -102400c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<100 KiB:,')"$ctg_file_count"
# < 1 MiB
ctg_file_count=`find $DIR -type f -size +102399c -size -1048576c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +102399c -size -1048576c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<1 MiB  :,')"$ctg_file_count"
# < 10 MiB
ctg_file_count=`find $DIR -type f -size +1048575c -size -10485760c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +1048575c -size -10485760c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<10 MiB :,')"$ctg_file_count"
# < 100 MiB
ctg_file_count=`find $DIR -type f -size +10485759c -size -104857600c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +10485759c -size -104857600c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<100 MiB:,')"$ctg_file_count"
# < 1 GiB
ctg_file_count=`find $DIR -type f -size +104857599c -size -1073741824c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +104857599c -size -1073741824c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n<1 GiB  :,')"$ctg_file_count"
# >= 1 GiB
ctg_file_count=`find $DIR -type f -size +1073741823c 2> /dev/null | wc -l`
if $ignore_set; then
	ctg_file_count=$(($ctg_file_count - `find $DIR -type f -size +1073741823c 2> /dev/null | while read line; do printf "$line" | awk -F "/" '{while (i++ < NF) print $i}' | grep -E "^(\.git|[0-9]+)$" | tr -d '\n'; echo ""; done | sed '/^$/d' | wc -l`))
fi
fshist="$fshist"$(printf '\n>=1 GiB :,')"$ctg_file_count"

if $normalize; then
	usable_len=$(($LINE_LEN - $FSHIST_PREFIX_LEN))
	max_len=`echo "$fshist" | awk -F "," '{print $2}' | sort -nr | head -n 1`
	if [ $max_len -gt $usable_len ]; then
		fshist=`echo "$fshist" | awk -v max_len=$max_len -v usable_len=$usable_len -F "," '{divisor = max_len / usable_len; printf "%s,%d\n", $1, $2 / divisor}'`
	fi
fi

# Print file size histogram
echo "$fshist" | awk -F "," '{printf "  " $1 " "; count = $2; i = 0; while (i++ < count) printf "#"; printf "\n"}'

# FTHIST
echo "File type histogram:"

if [ $file_count -gt 0 ]; then
	fthist=`find $DIR -type f -exec file {} + 2> /dev/null | awk -F ":[ ]+"  '{if (length($NF) > 40) print substr($NF, 1, 40) "..."; else print $NF}' | sort | uniq -c | sort -nr | head -n 10`
	#echo "`find $DIR -type f -exec file {} +`"
	if $normalize; then
		usable_len=$(($LINE_LEN - $FTHIST_PREFIX_LEN))
		max_len=`echo "$fthist" | head -n 1 | awk '{print $1}'`
		if [ $max_len -gt $usable_len ]; then
			fthist=`echo "$fthist" | awk -v max_len=$max_len -v usable_len=$usable_len '{divisor = max_len / usable_len; printf "%d ", $1 / divisor; $1=""; printf "%s\n", $0}'`
		fi
	fi

	# Print file type histogram
	SAVEIFS=$IFS
	echo "$fthist" | while IFS= read -r line ; do
		echo "$line" | awk '{$1=""; print " " $0}' | awk '{printf "%-45s: ", $0}'
		echo "$line" | awk '{count = $1; i = 0; while (i++ < count) printf "#"; printf "\n"}'
	done
	IFS=$SAVEIFS
fi

exit 0